/* Όνομα Αρχείου:	calc-0_with_flex.l
   Περιγραφή:	Είσοδος εργαλείου Flex για αναγνώριση ακεραίων και 
συμβόλου πρόσθεσης & πολλαπλασιασμού
	
   Συγγραφέας:	Εργαστήριο Μεταγλωττιστών, Τμήμα Μηχ.Πληροφορικής ΤΕ, ΤΕΙ Αθήνας

   Σχόλια:	Ο παρών κώδικας θα δημιουργήσει (με τη χρήση Flex) μια ρουτίνα λεκτικής ανάλυσης που αναγνωρίζει: το '+', delimiters (space και tab), newline, ακέραιους στην απλή μορφή [0-9]+ και λανθασμένους ακέραιους που τελειώνουν με κάποιο γράμμα.
*/

%option noyywrap
%x error

/* ________________________________________________________

Κώδικας C για ορισμό των απαιτούμενων header files και των μεταβλητών. Οτιδήποτε ανάμεσα στα %{ και %} μεταφέρεται αυτούσιο στο αρχείο C που θα δημιουργήσει το Flex. 
__________________________________________________________*/

%{

#include <stdio.h>
#include <string.h>
#include <stdlib.h>

/* Header file που περιέχει λίστα με όλα τα tokens.
   Προσοχή: Παράγεται από το εργαλείο Bison */

#include "calc-0_with_flex.tab.h"

/* _____________________________________________

Ορισμός μετρητή τρέχουσας γραμμής 
_________________________________________________*/

int line=1;

void yyerror (const char *msg);
void prn(char *s);

%}

/* _______________________________________________________

Ονόματα και αντίστοιχοι ορισμοί (υπό μορφή κανονικής έκφρασης).
   Μετά από αυτό, μπορεί να γίνει χρήση των ονομάτων (αριστερά) αντί των, συνήθως ιδιαίτερα μακροσκελών και δυσνόητων, κανονικών εκφράσεων 
____________________________________________________________*/

DELIMITERS	[ \t]+
INTEGER		[0-9]+

/*___________________________________________________________
 
Για κάθε pattern (αριστερά) που ταιριάζει εκτελείται ο αντίστοιχος κώδικας μέσα στα αγκύλες. 
_____________________________________________________________*/

%%
{DELIMITERS}      {}
"+"               {prn("+"); return '+';}
"*"		  {prn("*"); return '*';}
\n                {line++;   return NEWLINE;}
{INTEGER}         {prn("INTCONST"); return INTEGER;}
.                 {yyerror ("Unrecognized token error!"); BEGIN(error); return TOKEN_ERROR;}
<error>.          {}
<error>\n         {BEGIN(0);}

%%

/* _______________________________________________________________

Η συνάρτηση τυπώνει στην έξοδο ένα μήνυμα λάθους στην περίπτωση που αναγνωριστεί λανθασμένο token όπως π.χ. ακέραιος που τελειώνει με γράμμα. 
______________________________________________________________*/

void yyerror (const char *msg)
{
    fprintf(yyout, "\tFlex -> ERROR, line %d at lexeme \'%s\' : %s\n",line, yytext, msg);
}

/* ____________________________________________________________

Η συνάρτηση τυπώνει στην οθόνη το κείμενο του αναγνωριστικού που ταίριαξε με κάποιον κανόνα. Χρησιμοποιείται καθαρά για λόγους κατανόησης και debugging. 
______________________________________________________________*/

void prn(char *s)
{
	printf("\tFlex -> Matched token: %s\n", yytext);
}
