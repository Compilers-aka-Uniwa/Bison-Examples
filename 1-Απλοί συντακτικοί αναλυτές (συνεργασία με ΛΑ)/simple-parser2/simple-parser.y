/* Όνομα αρχείου:	simple-parser.y
   Περιγραφή:		Απλός συντακτικός αναλυτής (κώδικας για το εργαλείο Bison)
   Συγγραφέας:		Εργαστήριο Μεταγλωττιστών, Τμήμα Μηχ.Πληροφορικής ΤΕ, ΤΕΙ Αθήνας
   Σχόλια:		Ο συντακτικός αναλυτής αναγνωρίζει μόνο:
				1) Δήλωση μεταβλητής τύπου integer =========> int a;
				2) Ανάθεση τιμής ακεραίου σε μεταβλητή ====> a = 5;
				3) Ανάθεση τιμής μεταβλητής σε μεταβλητή ==> a = b;
			Κατανοεί και χρησιμοποιεί στους γραμματικούς κανόνες τις ακόλουθες
			λεκτικές μονάδες που παρέχονται/αναγνωρίζονται από το εργαλείο Flex:
				1) SINT		Η λέξη "int" για ορισμό μεταβλητής integer
				2) SEMI		Ο χαρακτήρας ';' ως τερματικός εντολής
				3) ASSIGNOP	Ο χαρακτήρας '=' για τις αναθέσεις τιμών
				4) IDENTIFIER	Αναγνωριστικό / όνομα μεταβλητής
				5) INTCONST	Ακέραιος αριθμός
*/

%{

/* --------------------------------------------------------------------------------
   Ορισμοί και δηλώσεις γλώσσας C. Οτιδήποτε έχει να κάνει με ορισμό ή αρχικοποίηση
   μεταβλητών, αρχεία header και δηλώσεις #define μπαίνει σε αυτό το σημείο */

#include <stdio.h>
#include <string.h>
int line=1;
int errflag=0;
extern char *yytext;
#define YYSTYPE char *

%}

/* -----------------------------
   Δηλώσεις και ορισμοί Bison */

/* Ορισμός των αναγνωρίσιμων λεκτικών μονάδων. */
%token SINT SEMI ASSIGNOP IDENTIFIER INTCONST

/* Ορισμός του συμβόλου έναρξης της γραμματικής */
%start program

%%

/* --------------------------------------------------------------------------------
   Ορισμός των γραμματικών κανόνων. Κάθε φορά που αντιστοιχίζεται ένας γραμματικός
   κανόνας με τα δεδομένα εισόδου, εκτελείται ο κώδικας C που βρίσκεται ανάμεσα στα
   άγκιστρα. Η αναμενόμενη σύνταξη είναι:
				όνομα : κανόνας { κώδικας C } */
					    
program	: program decl
	| program assign
        |  

decl	: type aid SEMI { printf("\n\t### Γραμμή:%d Δήλωση\n", line); }

type	: SINT 		{ $$ = strdup(yytext); }

aid	: IDENTIFIER	{ $$ = strdup(yytext); }

tim	: INTCONST	{ $$ = "SINT"; }
	| IDENTIFIER	{ $$ = strdup(yytext); }

assign	: aid ASSIGNOP tim SEMI
		{
			if (!strcmp($3, "SINT"))
			{
				printf("\n\t### Γραμμή:%d Ανάθεση τιμής\n", line);
			}
			else
			{
				printf("\n\t### Γραμμή:%d Ανάθεση μεταβλητής\n", line);
			}
		}

%%

/* --------------------------------------------------------------------------------
   Επιπρόσθετος κώδικας-χρήστη σε γλώσσα C. Στο σημείο αυτό μπορούν να προστεθούν
   συναρτήσεις C που θα συμπεριληφθούν στον κώδικα του συντακτικού αναλυτή */


/* Η συνάρτηση yyerror χρησιμοποιείται για την αναφορά σφαλμάτων. Συγκεκριμένα καλείται
   από την yyparse όταν υπάρξει κάποιο συντακτικό λάθος. Στην παρακάτω περίπτωση η
   συνάρτηση επί της ουσίας δεν χρησιμοποιείται και απλώς επιστρέφει αμέσως. */

int yyerror(void)
{}


/* Ο δείκτης yyin είναι αυτός που "δείχνει" στο αρχείο εισόδου. Εάν δεν γίνει χρήση
   του yyin, τότε η είσοδος γίνεται αποκλειστικά από το standard input (πληκτρολόγιο) */

extern FILE *yyin;


/* Η συνάρτηση main που αποτελεί και το σημείο εκκίνησης του προγράμματος.
   Γίνεται έλεγχος των ορισμάτων της γραμμής εντολών και κλήση της yyparse
   που πραγματοποιεί τη συντακτική ανάλυση. Στο τέλος γίνεται έλεγχος για
   την επιτυχή ή μη έκβαση της ανάλυσης. */

int main(int argc,char **argv)
{
	int i;
	if(argc == 2)
		yyin=fopen(argv[1],"r");
	else
		yyin=stdin;

	int parse = yyparse();

	if (errflag==0 && parse==0)
		printf("\nΑΡΧΕΙΟ ΕΙΣΟΔΟΥ: Η ΑΝΑΛΥΣΗ ΕΠΙΤΥΧΘΗΚΕ.\n", parse);
	else
		printf("\nΑΡΧΕΙΟ ΕΙΣΟΔΟΥ: Η ΑΝΑΛΥΣΗ ΑΠΕΤΥΧΕ.\n", parse);

	return 0;
}
